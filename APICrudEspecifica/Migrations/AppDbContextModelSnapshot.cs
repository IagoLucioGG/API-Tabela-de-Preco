// <auto-generated />
using System;
using APICrudEspecifica.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APICrudEspecifica.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APICrudEspecifica.Models.Familia", b =>
                {
                    b.Property<int>("IdFamilia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFamilia"));

                    b.Property<string>("NomeFamilia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFamilia");

                    b.ToTable("Familias");
                });

            modelBuilder.Entity("APICrudEspecifica.Models.HistoricoPrecoCalculado", b =>
                {
                    b.Property<int>("IdHistoricoPreco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistoricoPreco"));

                    b.Property<string>("CondicionalParametro")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DataCalculo")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFamilia")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int?>("QtdParametro")
                        .HasColumnType("int");

                    b.Property<string>("RegrasAplicadasJSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioConsulta")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("ValorAdesaoFinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorAssinaturaFinal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdHistoricoPreco");

                    b.ToTable("HistoricosPrecos");
                });

            modelBuilder.Entity("APICrudEspecifica.Models.MovimentoComercial", b =>
                {
                    b.Property<int>("IdMovimentoComercial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimentoComercial"));

                    b.Property<string>("DescricaoMovComercial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoMovimentoComercial")
                        .HasColumnType("int");

                    b.HasKey("IdMovimentoComercial");

                    b.ToTable("Movimentos");
                });

            modelBuilder.Entity("APICrudEspecifica.Models.PrecoBaseProduto", b =>
                {
                    b.Property<int>("IdPrecoBaseProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrecoBaseProduto"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("DataFimVigencia")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataInicioVigencia")
                        .HasColumnType("date");

                    b.Property<int>("IdFamilia")
                        .HasColumnType("int");

                    b.Property<int>("IdMovimentoComercial")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorBase")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPrecoBaseProduto");

                    b.ToTable("PrecosBaseProdutos");
                });

            modelBuilder.Entity("APICrudEspecifica.Models.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduto"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("CodigoProduto")
                        .HasColumnType("int");

                    b.Property<string>("IdChaveExterna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdFamilia")
                        .HasColumnType("int");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProduto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("APICrudEspecifica.Models.RegraCondicional", b =>
                {
                    b.Property<int>("IdRegraCondicional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegraCondicional"));

                    b.Property<string>("CondicaoTipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CondicaoValorEsperado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdRegraPrecificacao")
                        .HasColumnType("int");

                    b.Property<string>("TipoAjuste")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ValorAjuste")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdRegraCondicional");

                    b.ToTable("RegrasCondicional");
                });

            modelBuilder.Entity("APICrudEspecifica.Models.RegraFaixaQuantidade", b =>
                {
                    b.Property<int>("IdRegraFaixaQuantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegraFaixaQuantidade"));

                    b.Property<int>("IdRegraPrecificacao")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("QtdMax")
                        .HasColumnType("int");

                    b.Property<int>("QtdMin")
                        .HasColumnType("int");

                    b.Property<string>("TipoMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdRegraFaixaQuantidade");

                    b.ToTable("RegrasFaixaQuantidade");
                });

            modelBuilder.Entity("APICrudEspecifica.Models.RegraPrecificacao", b =>
                {
                    b.Property<int>("IdRegraPrecificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegraPrecificacao"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataFimVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdFamilia")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoMovimentoComercial")
                        .HasColumnType("int");

                    b.Property<string>("NomeRegra")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int");

                    b.Property<string>("TipoRegra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRegraPrecificacao");

                    b.ToTable("RegrasPrecificacao");
                });
#pragma warning restore 612, 618
        }
    }
}
